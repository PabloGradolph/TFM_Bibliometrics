# Generated by Django 5.2 on 2025-05-19 09:50

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gesbib_id', models.IntegerField(verbose_name='GesBIB ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Institution name')),
                ('link', models.URLField(blank=True, max_length=255, verbose_name='GesBIB link')),
                ('international_collab_index', models.FloatField(blank=True, null=True, verbose_name='International collaboration index')),
                ('main_area', models.CharField(blank=True, max_length=255, verbose_name='Main thematic area')),
                ('region', models.CharField(blank=True, max_length=100, verbose_name='Region (CCAA)')),
                ('province', models.CharField(blank=True, max_length=100, verbose_name='Province')),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gb_id', models.CharField(max_length=50, unique=True, verbose_name='GESBIB ID')),
                ('title', models.TextField(verbose_name='Title')),
                ('doi', models.CharField(blank=True, max_length=100, null=True, verbose_name='DOI')),
                ('year', models.IntegerField(verbose_name='Year')),
                ('publication_date', models.DateField(blank=True, null=True, verbose_name='Publication date')),
                ('publication_type', models.CharField(max_length=100, verbose_name='Normalized type')),
                ('source', models.CharField(blank=True, max_length=255, null=True, verbose_name='Source')),
                ('wos_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Web of Science ID')),
                ('scopus_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Scopus ID')),
                ('indices_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='√çnDICEs ID')),
                ('digital_csic_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Digital.CSIC ID')),
                ('conciencia_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Conciencia ID')),
                ('open_access', models.BooleanField(default=False, verbose_name='Open access')),
                ('is_csic', models.BooleanField(default=True, verbose_name='CSIC Publication?')),
            ],
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Template name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('entity_type', models.CharField(choices=[('author', 'Author'), ('institution', 'Institution'), ('area', 'Thematic Area'), ('custom', 'Custom')], max_length=50, verbose_name='Entity type')),
                ('file_type', models.CharField(choices=[('html', 'HTML'), ('pdf', 'PDF'), ('csv', 'CSV')], max_length=10, verbose_name='Output format')),
                ('engine', models.CharField(choices=[('quarto', 'Quarto'), ('rmarkdown', 'RMarkdown'), ('python', 'Python script')], max_length=20, verbose_name='Rendering engine')),
                ('template_path', models.CharField(max_length=300, verbose_name='Template file path')),
                ('is_active', models.BooleanField(default=True, verbose_name='Available for use')),
            ],
        ),
        migrations.CreateModel(
            name='ThematicArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Thematic area')),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=100, unique=True, verbose_name='Keyword')),
                ('publications', models.ManyToManyField(related_name='keywords', to='bibliodata.publication')),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('gesbib_id', models.CharField(blank=True, max_length=50, primary_key=True, serialize=False, verbose_name='GESBIB Author ID')),
                ('csic_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='CSIC ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('name_link', models.URLField(blank=True, null=True, verbose_name='Name link')),
                ('signature', models.CharField(blank=True, max_length=255, null=True, verbose_name='CSIC Signature')),
                ('aliases', models.JSONField(blank=True, null=True, verbose_name='Known aliases')),
                ('orcid', models.CharField(blank=True, max_length=50, null=True, verbose_name='ORCID')),
                ('orcid_link', models.URLField(blank=True, null=True, verbose_name='ORCID link')),
                ('researcher_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Researcher ID (WoS)')),
                ('researcher_id_link', models.URLField(blank=True, null=True, verbose_name='Researcher ID link')),
                ('scopus_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Scopus ID')),
                ('scopus_id_link', models.URLField(blank=True, null=True, verbose_name='Scopus ID link')),
                ('openalex_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='OpenAlex ID')),
                ('openalex_id_link', models.URLField(blank=True, null=True, verbose_name='OpenAlex ID link')),
                ('google_scholar', models.CharField(blank=True, max_length=100, null=True, verbose_name='Google Scholar ID')),
                ('google_scholar_link', models.URLField(blank=True, null=True, verbose_name='Google Scholar link')),
                ('digital_csic', models.URLField(blank=True, null=True, verbose_name='Digital.CSIC')),
                ('fecyt_cvn', models.URLField(blank=True, null=True, verbose_name='FECYT CVN')),
                ('total_publications', models.IntegerField(blank=True, null=True, verbose_name='Total publications')),
                ('total_citations', models.IntegerField(blank=True, null=True, verbose_name='Total citations')),
                ('citations_wos', models.IntegerField(blank=True, null=True, verbose_name='Citations (WoS)')),
                ('citations_scopus', models.IntegerField(blank=True, null=True, verbose_name='Citations (Scopus)')),
                ('h_index', models.CharField(blank=True, max_length=10, null=True, verbose_name='H-index (WoS/Scopus)')),
                ('h_index_gb', models.IntegerField(blank=True, null=True, verbose_name='H-index GESBIB')),
                ('h_index_h5gb', models.IntegerField(blank=True, null=True, verbose_name='H5-index GESBIB')),
                ('international_index', models.FloatField(blank=True, null=True, verbose_name='International collaboration index')),
                ('gender_estimate', models.IntegerField(blank=True, null=True, verbose_name='Estimated gender')),
                ('institutions_raw', models.TextField(blank=True, null=True, verbose_name='Raw institution string (CSV)')),
                ('institutions_work', models.JSONField(blank=True, null=True, verbose_name='Institutions linked by work')),
                ('institutions_published', models.JSONField(blank=True, null=True, verbose_name='Institutions with publications')),
                ('materias_jcr', models.JSONField(blank=True, null=True, verbose_name='JCR Subjects')),
                ('materias_cs', models.JSONField(blank=True, null=True, verbose_name='CS Subjects')),
                ('keywords', models.JSONField(blank=True, null=True, verbose_name='Keywords')),
                ('country_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Country ID')),
                ('institutions_last', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='authors_last_affiliated', to='bibliodata.institution', verbose_name='Last affiliated institution')),
                ('publications', models.ManyToManyField(related_name='authors', to='bibliodata.publication')),
            ],
        ),
        migrations.CreateModel(
            name='PublicationDuplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_duplicated', models.BooleanField(default=False, verbose_name='Duplicated?')),
                ('is_csic', models.BooleanField(default=True, verbose_name='CSIC Publication?')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='Remarks')),
                ('publication', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='duplication_info', to='bibliodata.publication')),
            ],
        ),
        migrations.AddField(
            model_name='publication',
            name='thematic_areas',
            field=models.ManyToManyField(related_name='publications', to='bibliodata.thematicarea'),
        ),
        migrations.AddField(
            model_name='institution',
            name='thematic_areas',
            field=models.ManyToManyField(blank=True, related_name='institutions', to='bibliodata.thematicarea'),
        ),
        migrations.CreateModel(
            name='ThematicCluster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Cluster name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('publications', models.ManyToManyField(related_name='clusters', to='bibliodata.publication')),
            ],
        ),
        migrations.CreateModel(
            name='InstitutionMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=50, verbose_name='Metric source')),
                ('year', models.IntegerField(verbose_name='Year')),
                ('num_pubs_own', models.IntegerField(blank=True, null=True, verbose_name='Own publications')),
                ('num_pubs_own_children', models.IntegerField(blank=True, null=True, verbose_name='Own + children')),
                ('num_pubs_wos', models.IntegerField(blank=True, null=True, verbose_name='WoS publications (own + children)')),
                ('num_pubs_scopus', models.IntegerField(blank=True, null=True, verbose_name='Scopus publications (own + children)')),
                ('citations_wos', models.IntegerField(blank=True, null=True)),
                ('citations_scopus', models.IntegerField(blank=True, null=True)),
                ('h_index_wos', models.IntegerField(blank=True, null=True)),
                ('h_index_scopus', models.IntegerField(blank=True, null=True)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='bibliodata.institution')),
            ],
            options={
                'ordering': ['institution', 'source', 'year'],
                'unique_together': {('institution', 'source', 'year')},
            },
        ),
        migrations.CreateModel(
            name='PublicationMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(choices=[('jcr', 'JCR'), ('sjr', 'SJR'), ('citescore', 'CiteScore'), ('jci', 'JCI'), ('dimensions', 'Dimensions')], max_length=50, verbose_name='Metric source')),
                ('year', models.IntegerField(blank=True, null=True, verbose_name='Metric year')),
                ('impact_factor', models.FloatField(blank=True, null=True, verbose_name='Impact factor')),
                ('quartile', models.CharField(blank=True, max_length=10, null=True, verbose_name='Quartile (e.g., Q1)')),
                ('quartile_value', models.IntegerField(blank=True, null=True, verbose_name='Quartile (numeric)')),
                ('percentile', models.FloatField(blank=True, null=True, verbose_name='Percentile')),
                ('position', models.IntegerField(blank=True, null=True, verbose_name='Position')),
                ('influence_score', models.FloatField(blank=True, null=True, verbose_name='Influence score')),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='bibliodata.publication')),
            ],
            options={
                'ordering': ['publication', 'source', 'year'],
                'unique_together': {('publication', 'source', 'year')},
            },
        ),
    ]
